ratings<-ratings%>% arrange (desc(`Avg rating`))
head(ratings,5)
apprating<-apps %>% group_by(App)  %>% summarise(rating=mean(Rating))
apprating<- apprating %>% arrange(desc(rating))
head(apprating,5)
boxplot(Sentiment_Polarity~Year,data = apps,
main="Sentiment spread based on last updated Year",
xlab = "Year last updated",
ylab = "Average Sentiment",
col=(c("lightblue") ))
boxplot(Sentiment_Polarity~Price, data = apps,
main="Sentiment spread based on Price",
xlab = "Price of App",
ylab = "Average Sentiment",
col=(c("gold")))
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(knitr)
library(forecast)
library(car)
googleplaystore <- read_csv("googleplaystore.csv")
googleplaystore_user_reviews <- read_csv("googleplaystore_user_reviews.csv")
playstoredescription <- read_csv("playstoredescription.csv")
UserReviewsdescription <- read_csv("UserReviewsdescription.csv")
kable(playstoredescription)
kable(UserReviewsdescription)
apps <- googleplaystore %>% left_join(googleplaystore_user_reviews, by = "App")
str(apps)
apps<-apps %>% select(-c(`Android Ver`,`Current Ver`))
colnames(apps)
apps <- apps %>% mutate(
Installs = factor(apps$Installs,
levels = c( "0","0+","1+","5+","10+","50+","100+","500+","1,000+",
"5,000+","10,000+",  "50,000+", "100,000+",  "500,000+",
"1,000,000+","5,000,000+" ,  "10,000,000+" ,  "50,000,000+", "100,000,000+",
"500,000,000+","1,000,000,000+") ,
labels = c( "0","0+","1+","5+","10+","50+","100+","500+","1,000+",
"5,000+","10,000+",  "50,000+", "100,000+",  "500,000+",
"1,000,000+","5,000,000+" ,  "10,000,000+" ,  "50,000,000+",
"100,000,000+", "500,000,000+","1,000,000,000+"),
ordered=T),
Type = factor(apps$Type,
levels = c("Free", "Paid"),
labels = c("Free", "Paid")),
`Content Rating`= factor(apps$`Content Rating`,
levels = c("Everyone", "Everyone 10+",  "Teen", "Mature 17+", "Adults only 18+"),
labels = c("Everyone", "Everyone 10+",  "Teen", "Mature 17+", "Adults only 18+"),
ordered = T ),
Sentiment = factor(apps$Sentiment,
levels = c("Negative", "Neutral", "Positive"),
labels = c("Negative", "Neutral", "Positive"),
ordered = T),
Category = factor(apps$Category)
)
str(apps[,c("Installs", "Type", "Content Rating", "Sentiment", "Category")])
apps <- apps %>% mutate(Updated = mdy(apps$`Last Updated`))
apps <- apps %>% select(-`Last Updated`)
str(apps$Updated)
apps$Price <- substr(apps$Price,2,nchar(apps$Price)) %>% as.numeric()
str(apps$Price)
unit_size<-str_extract(apps$Size,"[aA-zZ]")
value_size <- substr(apps$Size,start = 1,stop=(nchar(apps$Size)-1)) %>% as.numeric()
conversion <-function(x,y) {ifelse(x=="M",y,ifelse(x=="k",y*0.001,NA))}
size<-conversion(unit_size,value_size)
apps<-apps %>% mutate(Size=size)
class(apps$Size)
summary(apps$Size)
str(apps)
head(apps, 6)
apps <- apps %>% mutate(Day = day(apps$Updated),
Month = month(apps$Updated),
Year = year(apps$Updated))
str(apps[,c("Day", "Month", "Year")])
n <- colSums(is.na(apps)) %>% as.data.frame()
names(n) <- "NA"
i <- sapply(apps, is.infinite) %>% as.data.frame() %>%
colSums()
nan <- sapply(apps, is.nan) %>% as.data.frame() %>%
colSums()
x <- n %>% mutate(Infinite = i, Nan = nan)
row.names(x) <- colnames(apps)
x
apps[which(is.na(apps$Reviews)),]
apps <- apps[-which(is.na(apps$Reviews)),]
sum(is.na(apps$Reviews))
apps <- apps[-which(is.na(apps$Rating)),]
sum(is.na(apps$Rating))
apps$Price[which(is.na(apps$Price))] <- 0
sum(is.na(apps$Price))
apps <- apps %>%
group_by(Category) %>%
mutate(Size = ifelse(is.na(Size),
mean(Size,na.rm = T),
Size)) %>% ungroup()
# Checking if Size is imputed
sum(is.na(apps$Size))
# Displaying sizes by categories
apps %>%
group_by(Category) %>% summarise(mean=round(mean(Size),2))
apps <- apps[-which(is.na(apps$Translated_Review)),]
sum(is.na(apps$Translated_Review))
apps <- apps[-which(is.na(apps$Sentiment_Polarity)),]
sum(is.na(apps$Sentiment_Polarity))
n <- colSums(is.na(apps)) %>% as.data.frame()
names(n) <- "NA"
i <- sapply(apps, is.infinite) %>% as.data.frame() %>%
colSums()
nan <- sapply(apps, is.nan) %>% as.data.frame() %>%
colSums()
x <- n %>% mutate(Infinite = i, Nan = nan)
row.names(x) <- colnames(apps)
x
check_numeric <-sapply(apps, is.numeric) %>% as.data.frame()
names(check_numeric) <-"Numeric"
check<-check_numeric %>% mutate(Variable=colnames(apps),Numeric=Numeric)
check<-check%>% filter(Numeric==T) %>% select(Variable,Numeric)
check
par(mfrow=c(2,3))
Boxplot(apps$Rating, main="Rating")
Boxplot(apps$Reviews, main="Reviews")
Boxplot(apps$Size, main="Size")
Boxplot(apps$Sentiment_Polarity, main= "Sentiment Polarity")
Boxplot(apps$Sentiment_Subjectivity, main = "Sentiment Subjectivity")
Boxplot(apps$Price~apps$Type, main = "Price grouped by type of app")
hist(apps$Reviews, main="Reviews")
cap <- function(x){
quantiles <- quantile( x,probs =  c(0.05, 0.25, 0.75, 0.95),na.rm=TRUE)
x[ x < quantiles[2] - 1.5*IQR(x,na.rm=T) ] <- quantiles[1]
x[ x > quantiles[3] + 1.5*IQR(x,na.rm=T) ] <- quantiles[4]
x
}
apps[,c("Rating", "Size","Sentiment_Polarity", "Sentiment_Subjectivity")] <- sapply(apps[,c("Rating", "Size","Sentiment_Polarity", "Sentiment_Subjectivity")], cap) %>%
as.data.frame()
apps <- apps %>%
group_by(Type) %>%
mutate(Price = cap(Price)) %>% ungroup()
par(mfrow=c(2,2), pty = "s" )
Boxplot(apps$Rating, main="Rating")
Boxplot(apps$Size, main="Size")
Boxplot(apps$Sentiment_Polarity, main= "Sentiment Polarity")
Boxplot(apps$Sentiment_Subjectivity, main = "Sentiment Subjectivity")
Boxplot(apps$Price~apps$Type, main = "Price groupd by type of app")
hist(apps$Reviews, main="Reviews")
apps <- apps %>% mutate(Reviews_t = log10(apps$Reviews))
hist(apps$Reviews_t, main="Log10(Reviews)")
Boxplot(apps$Reviews_t, main="log10(Reviews)")
apps<-apps %>% select(App,Category,Genres,Size,Updated,Year,Month,Day,Type,Price,`Content Rating`,Reviews,Rating,Installs,
Translated_Review ,Sentiment,Sentiment_Polarity,  Sentiment_Subjectivity,Reviews_t)
#arranging the data according to Categories (A-Z) and ratings (high to low) within these categories.
apps<-apps %>% arrange(Category,desc(Rating))
head(apps,10)
#checking the structure of the final data
str(apps)
ratings <- apps %>% group_by(Category) %>% summarise("Avg rating"=round(mean(Rating),2))
ratings<-ratings%>% arrange (desc(`Avg rating`))
head(ratings,5)
apprating<-apps %>% group_by(App)  %>% summarise(rating=mean(Rating))
apprating<- apprating %>% arrange(desc(rating))
head(apprating,5)
boxplot(Sentiment_Polarity~Year,data = apps,
main="Sentiment spread based on last updated Year",
xlab = "Year last updated",
ylab = "Average Sentiment",
col=(c("lightblue") ))
boxplot(Sentiment_Polarity~Price, data = apps,
main="Sentiment spread based on Price",
xlab = "Price of App",
ylab = "Average Sentiment",
col=(c("gold")))
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(knitr)
library(forecast)
library(car)
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(knitr)
library(forecast)
library(car)
googleplaystore <- read_csv("googleplaystore.csv")
googleplaystore_user_reviews <- read_csv("googleplaystore_user_reviews.csv")
playstoredescription <- read_csv("playstoredescription.csv")
UserReviewsdescription <- read_csv("UserReviewsdescription.csv")
kable(playstoredescription)
kable(UserReviewsdescription)
apps <- googleplaystore %>% left_join(googleplaystore_user_reviews, by = "App")
str(apps)
apps<-apps %>% select(-c(`Android Ver`,`Current Ver`))
colnames(apps)
apps <- apps %>% mutate(
Installs = factor(apps$Installs,
levels = c( "0","0+","1+","5+","10+","50+","100+","500+","1,000+",
"5,000+","10,000+",  "50,000+", "100,000+",  "500,000+",
"1,000,000+","5,000,000+" ,  "10,000,000+" ,  "50,000,000+", "100,000,000+",
"500,000,000+","1,000,000,000+") ,
labels = c( "0","0+","1+","5+","10+","50+","100+","500+","1,000+",
"5,000+","10,000+",  "50,000+", "100,000+",  "500,000+",
"1,000,000+","5,000,000+" ,  "10,000,000+" ,  "50,000,000+",
"100,000,000+", "500,000,000+","1,000,000,000+"),
ordered=T),
Type = factor(apps$Type,
levels = c("Free", "Paid"),
labels = c("Free", "Paid")),
`Content Rating`= factor(apps$`Content Rating`,
levels = c("Everyone", "Everyone 10+",  "Teen", "Mature 17+", "Adults only 18+"),
labels = c("Everyone", "Everyone 10+",  "Teen", "Mature 17+", "Adults only 18+"),
ordered = T ),
Sentiment = factor(apps$Sentiment,
levels = c("Negative", "Neutral", "Positive"),
labels = c("Negative", "Neutral", "Positive"),
ordered = T),
Category = factor(apps$Category)
)
str(apps[,c("Installs", "Type", "Content Rating", "Sentiment", "Category")])
apps <- apps %>% mutate(Updated = mdy(apps$`Last Updated`))
apps <- apps %>% select(-`Last Updated`)
str(apps$Updated)
apps$Price <- substr(apps$Price,2,nchar(apps$Price)) %>% as.numeric()
str(apps$Price)
unit_size<-str_extract(apps$Size,"[aA-zZ]")
value_size <- substr(apps$Size,start = 1,stop=(nchar(apps$Size)-1)) %>% as.numeric()
conversion <-function(x,y) {ifelse(x=="M",y,ifelse(x=="k",y*0.001,NA))}
size<-conversion(unit_size,value_size)
apps<-apps %>% mutate(Size=size)
class(apps$Size)
summary(apps$Size)
str(apps)
head(apps, 6)
apps <- apps %>% mutate(Day = day(apps$Updated),
Month = month(apps$Updated),
Year = year(apps$Updated))
str(apps[,c("Day", "Month", "Year")])
n <- colSums(is.na(apps)) %>% as.data.frame()
names(n) <- "NA"
i <- sapply(apps, is.infinite) %>% as.data.frame() %>%
colSums()
nan <- sapply(apps, is.nan) %>% as.data.frame() %>%
colSums()
x <- n %>% mutate(Infinite = i, Nan = nan)
row.names(x) <- colnames(apps)
x
apps[which(is.na(apps$Reviews)),]
apps <- apps[-which(is.na(apps$Reviews)),]
sum(is.na(apps$Reviews))
apps <- apps[-which(is.na(apps$Rating)),]
sum(is.na(apps$Rating))
apps$Price[which(is.na(apps$Price))] <- 0
sum(is.na(apps$Price))
apps <- apps %>%
group_by(Category) %>%
mutate(Size = ifelse(is.na(Size),
mean(Size,na.rm = T),
Size)) %>% ungroup()
# Checking if Size is imputed
sum(is.na(apps$Size))
# Displaying sizes by categories
apps %>%
group_by(Category) %>% summarise(mean=round(mean(Size),2))
apps <- apps[-which(is.na(apps$Translated_Review)),]
sum(is.na(apps$Translated_Review))
apps <- apps[-which(is.na(apps$Sentiment_Polarity)),]
sum(is.na(apps$Sentiment_Polarity))
n <- colSums(is.na(apps)) %>% as.data.frame()
names(n) <- "NA"
i <- sapply(apps, is.infinite) %>% as.data.frame() %>%
colSums()
nan <- sapply(apps, is.nan) %>% as.data.frame() %>%
colSums()
x <- n %>% mutate(Infinite = i, Nan = nan)
row.names(x) <- colnames(apps)
x
check_numeric <-sapply(apps, is.numeric) %>% as.data.frame()
names(check_numeric) <-"Numeric"
check<-check_numeric %>% mutate(Variable=colnames(apps),Numeric=Numeric)
check<-check%>% filter(Numeric==T) %>% select(Variable,Numeric)
check
par(mfrow=c(2,3))
Boxplot(apps$Rating, main="Rating")
Boxplot(apps$Reviews, main="Reviews")
Boxplot(apps$Size, main="Size")
Boxplot(apps$Sentiment_Polarity, main= "Sentiment Polarity")
Boxplot(apps$Sentiment_Subjectivity, main = "Sentiment Subjectivity")
Boxplot(apps$Price~apps$Type, main = "Price grouped by type of app")
hist(apps$Reviews, main="Reviews")
cap <- function(x){
quantiles <- quantile( x,probs =  c(0.05, 0.25, 0.75, 0.95),na.rm=TRUE)
x[ x < quantiles[2] - 1.5*IQR(x,na.rm=T) ] <- quantiles[1]
x[ x > quantiles[3] + 1.5*IQR(x,na.rm=T) ] <- quantiles[4]
x
}
apps[,c("Rating", "Size","Sentiment_Polarity", "Sentiment_Subjectivity")] <- sapply(apps[,c("Rating", "Size","Sentiment_Polarity", "Sentiment_Subjectivity")], cap) %>%
as.data.frame()
apps <- apps %>%
group_by(Type) %>%
mutate(Price = cap(Price)) %>% ungroup()
par(mfrow=c(2,2), pty = "s" )
Boxplot(apps$Rating, main="Rating")
Boxplot(apps$Size, main="Size")
Boxplot(apps$Sentiment_Polarity, main= "Sentiment Polarity")
Boxplot(apps$Sentiment_Subjectivity, main = "Sentiment Subjectivity")
Boxplot(apps$Price~apps$Type, main = "Price groupd by type of app")
hist(apps$Reviews, main="Reviews")
apps <- apps %>% mutate(Reviews_t = log10(apps$Reviews))
hist(apps$Reviews_t, main="Log10(Reviews)")
Boxplot(apps$Reviews_t, main="log10(Reviews)")
apps<-apps %>% select(App,Category,Genres,Size,Updated,Year,Month,Day,Type,Price,`Content Rating`,Reviews,Rating,Installs,
Translated_Review ,Sentiment,Sentiment_Polarity,  Sentiment_Subjectivity,Reviews_t)
#arranging the data according to Categories (A-Z) and ratings (high to low) within these categories.
apps<-apps %>% arrange(Category,desc(Rating))
head(apps,10)
#checking the structure of the final data
str(apps)
ratings <- apps %>% group_by(Category) %>% summarise("Avg rating"=round(mean(Rating),2))
ratings<-ratings%>% arrange (desc(`Avg rating`))
head(ratings,5)
apprating<-apps %>% group_by(App)  %>% summarise(rating=mean(Rating))
apprating<- apprating %>% arrange(desc(rating))
head(apprating,5)
boxplot(Sentiment_Polarity~Year,data = apps,
main="Sentiment spread based on last updated Year",
xlab = "Year last updated",
ylab = "Average Sentiment",
col=(c("lightblue") ))
boxplot(Sentiment_Polarity~Price, data = apps,
main="Sentiment spread based on Price",
xlab = "Price of App",
ylab = "Average Sentiment",
col=(c("gold")))
googleplaystore <- read_csv("googleplaystore.csv")
googleplaystore_user_reviews <- read_csv("googleplaystore_user_reviews.csv")
playstoredescription <- read_csv("playstoredescription.csv")
UserReviewsdescription <- read_csv("UserReviewsdescription.csv")
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(knitr)
library(forecast)
library(car)
googleplaystore <- read_csv("googleplaystore.csv")
googleplaystore_user_reviews <- read_csv("googleplaystore_user_reviews.csv")
playstoredescription <- read_csv("playstoredescription.csv")
UserReviewsdescription <- read_csv("UserReviewsdescription.csv")
googleplaystore <- read_csv("googleplaystore.csv")
googleplaystore_user_reviews <- read_csv("googleplaystore_user_reviews.csv")
playstoredescription <- read_csv("playstoredescription.csv")
UserReviewsdescription <- read_csv("UserReviewsdescription.csv")
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(knitr)
library(forecast)
library(car)
googleplaystore <- read_csv("googleplaystore.csv")
googleplaystore_user_reviews <- read_csv("googleplaystore_user_reviews.csv")
playstoredescription <- read_csv("playstoredescription.csv")
UserReviewsdescription <- read_csv("UserReviewsdescription.csv")
install.packages(c("forecast", "lubridate"))
options(htmltools.dir.version = FALSE)
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(knitr)
library(forecast)
library(car)
library(kableExtra)
googleplaystore <- read_csv("googleplaystore.csv")
googleplaystore_user_reviews <- read_csv("googleplaystore_user_reviews.csv")
playstoredescription <- read_csv("playstoredescription.csv")
UserReviewsdescription <- read_csv("UserReviewsdescription.csv")
kable(playstoredescription)%>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center", font_size = 12) %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "30em")
kable(UserReviewsdescription)%>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "center", font_size = 12) %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "30em")
apps <- googleplaystore %>% left_join(googleplaystore_user_reviews, by = "App")
str(apps)
apps<-apps %>% select(-c(`Android Ver`,`Current Ver`))
colnames(apps)
apps <- apps %>% mutate(
Installs = factor(apps$Installs,
levels = c( "0","0+","1+","5+","10+","50+","100+","500+","1,000+",
"5,000+","10,000+",  "50,000+", "100,000+",  "500,000+",
"1,000,000+","5,000,000+" ,  "10,000,000+" ,  "50,000,000+", "100,000,000+",
"500,000,000+","1,000,000,000+") ,
labels = c( "0","0+","1+","5+","10+","50+","100+","500+","1,000+",
"5,000+","10,000+",  "50,000+", "100,000+",  "500,000+",
"1,000,000+","5,000,000+" ,  "10,000,000+" ,  "50,000,000+",
"100,000,000+", "500,000,000+","1,000,000,000+"),
ordered=T),
Type = factor(apps$Type,
levels = c("Free", "Paid"),
labels = c("Free", "Paid")),
`Content Rating`= factor(apps$`Content Rating`,
levels = c("Everyone", "Everyone 10+",  "Teen", "Mature 17+", "Adults only 18+"),
labels = c("Everyone", "Everyone 10+",  "Teen", "Mature 17+", "Adults only 18+"),
ordered = T ),
Sentiment = factor(apps$Sentiment,
levels = c("Negative", "Neutral", "Positive"),
labels = c("Negative", "Neutral", "Positive"),
ordered = T),
Category = factor(apps$Category)
)
str(apps[,c("Installs", "Type", "Content Rating", "Sentiment", "Category")])
apps <- apps %>% mutate(Updated = mdy(apps$`Last Updated`))
apps <- apps %>% select(-`Last Updated`)
str(apps$Updated)
apps$Price <- substr(apps$Price,2,nchar(apps$Price)) %>% as.numeric()
str(apps$Price)
unit_size<-str_extract(apps$Size,"[aA-zZ]")
value_size <- substr(apps$Size,start = 1,stop=(nchar(apps$Size)-1)) %>% as.numeric()
conversion <-function(x,y) {ifelse(x=="M",y,ifelse(x=="k",y*0.001,NA))}
size<-conversion(unit_size,value_size)
apps<-apps %>% mutate(Size=size)
class(apps$Size)
summary(apps$Size)
str(apps)
head(apps, 6)
apps <- apps %>% mutate(Day = day(apps$Updated),
Month = month(apps$Updated),
Year = year(apps$Updated))
str(apps[,c("Day", "Month", "Year")])
n <- colSums(is.na(apps)) %>% as.data.frame()
names(n) <- "NA"
i <- sapply(apps, is.infinite) %>% as.data.frame() %>%
colSums()
nan <- sapply(apps, is.nan) %>% as.data.frame() %>%
colSums()
x <- n %>% mutate(Infinite = i, Nan = nan)
row.names(x) <- colnames(apps)
x
apps[which(is.na(apps$Reviews)),]
apps <- apps[-which(is.na(apps$Reviews)),]
sum(is.na(apps$Reviews))
apps <- apps[-which(is.na(apps$Rating)),]
sum(is.na(apps$Rating))
apps$Price[which(is.na(apps$Price))] <- 0
sum(is.na(apps$Price))
apps <- apps %>%
group_by(Category) %>%
mutate(Size = ifelse(is.na(Size),
mean(Size,na.rm = T),
Size)) %>% ungroup()
sum(is.na(apps$Category))
apps <- apps[-which(is.na(apps$Translated_Review)),]
sum(is.na(apps$Translated_Review))
apps <- apps[-which(is.na(apps$Sentiment_Polarity)),]
sum(is.na(apps$Sentiment_Polarity))
n <- colSums(is.na(apps)) %>% as.data.frame()
names(n) <- "NA"
i <- sapply(apps, is.infinite) %>% as.data.frame() %>%
colSums()
nan <- sapply(apps, is.nan) %>% as.data.frame() %>%
colSums()
x <- n %>% mutate(Infinite = i, Nan = nan)
row.names(x) <- colnames(apps)
x
check_numeric <-sapply(apps, is.numeric) %>% as.data.frame()
names(check_numeric) <-"Numeric"
check<-check_numeric %>% mutate(Variable=colnames(apps),Numeric=Numeric)
check<-check%>% filter(Numeric==T) %>% select(Variable,Numeric)
check
par(mfrow=c(1,3))
boxplot(apps$Rating, main="Rating")
boxplot(apps$Reviews, main="Reviews")
boxplot(apps$Size, main="Size")
par(mfrow=c(1,3))
boxplot(apps$Sentiment_Polarity, main= "Sentiment Polarity")
boxplot(apps$Sentiment_Subjectivity, main = "Sentiment Subjectivity")
Boxplot(apps$Price~apps$Type, main = "Price grouped by type of app")
hist(apps$Reviews, main="Reviews")
cap <- function(x){
quantiles <- quantile( x,probs =  c(0.05, 0.25, 0.75, 0.95),na.rm=TRUE)
x[ x < quantiles[2] - 1.5*IQR(x,na.rm=T) ] <- quantiles[1]
x[ x > quantiles[3] + 1.5*IQR(x,na.rm=T) ] <- quantiles[4]
x
}
apps[,c("Rating", "Size","Sentiment_Polarity", "Sentiment_Subjectivity")] <- sapply(apps[,c("Rating", "Size","Sentiment_Polarity", "Sentiment_Subjectivity")], cap) %>%
as.data.frame()
apps <- apps %>%
group_by(Type) %>%
mutate(Price = cap(Price)) %>% ungroup()
par(mfrow=c(2,2), pty = "s" )
Boxplot(apps$Rating, main="Rating")
Boxplot(apps$Size, main="Size")
Boxplot(apps$Sentiment_Polarity, main= "Sentiment Polarity")
Boxplot(apps$Sentiment_Subjectivity, main = "Sentiment Subjectivity")
Boxplot(apps$Price~apps$Type, main = "Price groupd by type of app")
hist(apps$Reviews, main="Reviews")
apps <- apps %>% mutate(Reviews_t = log10(apps$Reviews))
hist(apps$Reviews_t, main="Log10(Reviews)")
Boxplot(apps$Reviews_t, main="log10(Reviews)")
apps<-apps %>% select(App,Category,Genres,Size,Updated,Type,Price,`Content Rating`,Reviews,Rating,Installs,
Translated_Review ,Sentiment,Sentiment_Polarity,  Sentiment_Subjectivity,Reviews_t)
str(apps)
